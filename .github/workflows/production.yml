name: CI

on:
  push:
    branches: [master]

jobs:
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: "[FE] Checkout Repo"
        uses: actions/checkout@v2

      - name: "[FE] Install Dependencies"
        run: yarn

      # Runs a set of commands using the runners shell
      - name: "[FE] Run Tests"
        run: yarn test

      - name: "[FE] Build React App"
        env:
          DEPLOY_ENVIRONMENT: production
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        run: yarn build

      - name: "[FE] Archive Build Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  deploy:
    name: PROD deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Functions Dependencies
        run: yarn install:functions

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --project=default
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_DEPLOY_TOKEN }}
          PROJECT_ID: "tw-amapp"
